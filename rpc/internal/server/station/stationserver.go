// Code generated by goctl. DO NOT EDIT.
// Source: station.proto

package server

import (
	"context"

	"rpc/internal/logic/station"
	"rpc/internal/svc"
	"rpc/station"
)

type StationServer struct {
	svcCtx *svc.ServiceContext
	station.UnimplementedStationServer
}

func NewStationServer(svcCtx *svc.ServiceContext) *StationServer {
	return &StationServer{
		svcCtx: svcCtx,
	}
}

func (s *StationServer) AddStation(ctx context.Context, in *station.StationInfo) (*station.StationInfo, error) {
	l := stationlogic.NewAddStationLogic(ctx, s.svcCtx)
	return l.AddStation(in)
}

func (s *StationServer) UpdateStation(ctx context.Context, in *station.StationInfo) (*station.StationInfo, error) {
	l := stationlogic.NewUpdateStationLogic(ctx, s.svcCtx)
	return l.UpdateStation(in)
}

func (s *StationServer) DeleteStation(ctx context.Context, in *station.IDPathReq) (*station.BaseDataInfo, error) {
	l := stationlogic.NewDeleteStationLogic(ctx, s.svcCtx)
	return l.DeleteStation(in)
}

func (s *StationServer) QueryStation(ctx context.Context, in *station.StationReq) (*station.StationListInfo, error) {
	l := stationlogic.NewQueryStationLogic(ctx, s.svcCtx)
	return l.QueryStation(in)
}

func (s *StationServer) GetStationAll(ctx context.Context, in *station.IDPathReq) (*station.StationListInfo, error) {
	l := stationlogic.NewGetStationAllLogic(ctx, s.svcCtx)
	return l.GetStationAll(in)
}

func (s *StationServer) GetStation(ctx context.Context, in *station.IDPathReq) (*station.StationInfo, error) {
	l := stationlogic.NewGetStationLogic(ctx, s.svcCtx)
	return l.GetStation(in)
}

func (s *StationServer) QueryPosts(ctx context.Context, in *station.IDPathReq) (*station.StationPostsResp, error) {
	l := stationlogic.NewQueryPostsLogic(ctx, s.svcCtx)
	return l.QueryPosts(in)
}
