// Code generated by goctl. DO NOT EDIT.
// Source: station.proto

package server

import (
	"context"

	"rpc/internal/logic/posts"
	"rpc/internal/svc"
	"rpc/station"
)

type PostsServer struct {
	svcCtx *svc.ServiceContext
	station.UnimplementedPostsServer
}

func NewPostsServer(svcCtx *svc.ServiceContext) *PostsServer {
	return &PostsServer{
		svcCtx: svcCtx,
	}
}

func (s *PostsServer) AddPosts(ctx context.Context, in *station.PostsInfo) (*station.PostsInfo, error) {
	l := postslogic.NewAddPostsLogic(ctx, s.svcCtx)
	return l.AddPosts(in)
}

func (s *PostsServer) UpdatePosts(ctx context.Context, in *station.PostsInfo) (*station.PostsInfo, error) {
	l := postslogic.NewUpdatePostsLogic(ctx, s.svcCtx)
	return l.UpdatePosts(in)
}

func (s *PostsServer) DeletePosts(ctx context.Context, in *station.IDPathReq) (*station.BaseDataInfo, error) {
	l := postslogic.NewDeletePostsLogic(ctx, s.svcCtx)
	return l.DeletePosts(in)
}

func (s *PostsServer) QueryPosts(ctx context.Context, in *station.PostsReq) (*station.PostsListInfo, error) {
	l := postslogic.NewQueryPostsLogic(ctx, s.svcCtx)
	return l.QueryPosts(in)
}

func (s *PostsServer) GetPosts(ctx context.Context, in *station.IDPathReq) (*station.PostsInfo, error) {
	l := postslogic.NewGetPostsLogic(ctx, s.svcCtx)
	return l.GetPosts(in)
}

func (s *PostsServer) QueryStation(ctx context.Context, in *station.IDPathReq) (*station.PostsStationResp, error) {
	l := postslogic.NewQueryStationLogic(ctx, s.svcCtx)
	return l.QueryStation(in)
}
