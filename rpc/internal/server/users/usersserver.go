// Code generated by goctl. DO NOT EDIT.
// Source: station.proto

package server

import (
	"context"

	"rpc/internal/logic/users"
	"rpc/internal/svc"
	"rpc/station"
)

type UsersServer struct {
	svcCtx *svc.ServiceContext
	station.UnimplementedUsersServer
}

func NewUsersServer(svcCtx *svc.ServiceContext) *UsersServer {
	return &UsersServer{
		svcCtx: svcCtx,
	}
}

func (s *UsersServer) AddUsers(ctx context.Context, in *station.UsersInfo) (*station.UsersInfo, error) {
	l := userslogic.NewAddUsersLogic(ctx, s.svcCtx)
	return l.AddUsers(in)
}

func (s *UsersServer) UpdateUsers(ctx context.Context, in *station.UsersInfo) (*station.UsersInfo, error) {
	l := userslogic.NewUpdateUsersLogic(ctx, s.svcCtx)
	return l.UpdateUsers(in)
}

func (s *UsersServer) DeleteUsers(ctx context.Context, in *station.IDPathReq) (*station.BaseDataInfo, error) {
	l := userslogic.NewDeleteUsersLogic(ctx, s.svcCtx)
	return l.DeleteUsers(in)
}

func (s *UsersServer) QueryUsers(ctx context.Context, in *station.UsersReq) (*station.UsersListInfo, error) {
	l := userslogic.NewQueryUsersLogic(ctx, s.svcCtx)
	return l.QueryUsers(in)
}

func (s *UsersServer) GetUsers(ctx context.Context, in *station.IDPathReq) (*station.UsersInfo, error) {
	l := userslogic.NewGetUsersLogic(ctx, s.svcCtx)
	return l.GetUsers(in)
}
