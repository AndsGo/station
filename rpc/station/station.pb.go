// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.4
// source: station.proto

package station

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The basic response with data
type BaseDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BaseDataInfo) Reset() {
	*x = BaseDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseDataInfo) ProtoMessage() {}

func (x *BaseDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseDataInfo.ProtoReflect.Descriptor instead.
func (*BaseDataInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{0}
}

func (x *BaseDataInfo) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseDataInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BaseDataInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// The basic response with data
type BaseListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BaseListInfo) Reset() {
	*x = BaseListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseListInfo) ProtoMessage() {}

func (x *BaseListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseListInfo.ProtoReflect.Descriptor instead.
func (*BaseListInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{1}
}

func (x *BaseListInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BaseListInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// The page request parameters
type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{2}
}

func (x *PageInfo) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ID Status request
type IDStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Result string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"` // 执行结果
}

func (x *IDStatusReq) Reset() {
	*x = IDStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDStatusReq) ProtoMessage() {}

func (x *IDStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDStatusReq.ProtoReflect.Descriptor instead.
func (*IDStatusReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{3}
}

func (x *IDStatusReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IDStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IDStatusReq) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Basic ID request
type IDPathReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDPathReq) Reset() {
	*x = IDPathReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDPathReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDPathReq) ProtoMessage() {}

func (x *IDPathReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDPathReq.ProtoReflect.Descriptor instead.
func (*IDPathReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{4}
}

func (x *IDPathReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Basic UUID request
type UUIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UUIDReq) Reset() {
	*x = UUIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDReq) ProtoMessage() {}

func (x *UUIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDReq.ProtoReflect.Descriptor instead.
func (*UUIDReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{5}
}

func (x *UUIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Station information
type StationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainName   string  `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	DomainYear   int64   `protobuf:"varint,3,opt,name=domain_year,json=domainYear,proto3" json:"domain_year,omitempty"`
	GoogleWeight float64 `protobuf:"fixed64,4,opt,name=google_weight,json=googleWeight,proto3" json:"google_weight,omitempty"`
	Type         string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Industry     string  `protobuf:"bytes,6,opt,name=industry,proto3" json:"industry,omitempty"`
	UserName     string  `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	PassWord     string  `protobuf:"bytes,8,opt,name=pass_word,json=passWord,proto3" json:"pass_word,omitempty"`
	ArticlesNum  int64   `protobuf:"varint,9,opt,name=articles_num,json=articlesNum,proto3" json:"articles_num,omitempty"`
	Ip           string  `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *StationInfo) Reset() {
	*x = StationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationInfo) ProtoMessage() {}

func (x *StationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationInfo.ProtoReflect.Descriptor instead.
func (*StationInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{6}
}

func (x *StationInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StationInfo) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *StationInfo) GetDomainYear() int64 {
	if x != nil {
		return x.DomainYear
	}
	return 0
}

func (x *StationInfo) GetGoogleWeight() float64 {
	if x != nil {
		return x.GoogleWeight
	}
	return 0
}

func (x *StationInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StationInfo) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *StationInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *StationInfo) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

func (x *StationInfo) GetArticlesNum() int64 {
	if x != nil {
		return x.ArticlesNum
	}
	return 0
}

func (x *StationInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// Station page query
type StationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo     *PageInfo `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	DomainName   string    `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	DomainYear   int64     `protobuf:"varint,3,opt,name=domain_year,json=domainYear,proto3" json:"domain_year,omitempty"`
	GoogleWeight string    `protobuf:"bytes,4,opt,name=google_weight,json=googleWeight,proto3" json:"google_weight,omitempty"`
	Type         string    `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Industry     string    `protobuf:"bytes,6,opt,name=industry,proto3" json:"industry,omitempty"`
	Ip           string    `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *StationReq) Reset() {
	*x = StationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationReq) ProtoMessage() {}

func (x *StationReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationReq.ProtoReflect.Descriptor instead.
func (*StationReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{7}
}

func (x *StationReq) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *StationReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *StationReq) GetDomainYear() int64 {
	if x != nil {
		return x.DomainYear
	}
	return 0
}

func (x *StationReq) GetGoogleWeight() string {
	if x != nil {
		return x.GoogleWeight
	}
	return ""
}

func (x *StationReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StationReq) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *StationReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// The response data of Station list
type StationListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseListInfo *BaseListInfo  `protobuf:"bytes,1,opt,name=base_list_info,json=baseListInfo,proto3" json:"base_list_info,omitempty"`
	Data         []*StationInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *StationListInfo) Reset() {
	*x = StationListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationListInfo) ProtoMessage() {}

func (x *StationListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationListInfo.ProtoReflect.Descriptor instead.
func (*StationListInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{8}
}

func (x *StationListInfo) GetBaseListInfo() *BaseListInfo {
	if x != nil {
		return x.BaseListInfo
	}
	return nil
}

func (x *StationListInfo) GetData() []*StationInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// Station list response
type StationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseDataInfo *BaseDataInfo    `protobuf:"bytes,1,opt,name=base_data_info,json=baseDataInfo,proto3" json:"base_data_info,omitempty"`
	Data         *StationListInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StationListResp) Reset() {
	*x = StationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationListResp) ProtoMessage() {}

func (x *StationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationListResp.ProtoReflect.Descriptor instead.
func (*StationListResp) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{9}
}

func (x *StationListResp) GetBaseDataInfo() *BaseDataInfo {
	if x != nil {
		return x.BaseDataInfo
	}
	return nil
}

func (x *StationListResp) GetData() *StationListInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// Station normal response
type StationInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseDataInfo *BaseDataInfo `protobuf:"bytes,1,opt,name=base_data_info,json=baseDataInfo,proto3" json:"base_data_info,omitempty"`
	Data         *StationInfo  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StationInfoResp) Reset() {
	*x = StationInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationInfoResp) ProtoMessage() {}

func (x *StationInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationInfoResp.ProtoReflect.Descriptor instead.
func (*StationInfoResp) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{10}
}

func (x *StationInfoResp) GetBaseDataInfo() *BaseDataInfo {
	if x != nil {
		return x.BaseDataInfo
	}
	return nil
}

func (x *StationInfoResp) GetData() *StationInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// Posts information
type PostsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Source     string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Author     int64  `protobuf:"varint,4,opt,name=author,proto3" json:"author,omitempty"`
	ThrownNum  int64  `protobuf:"varint,5,opt,name=thrown_num,json=thrownNum,proto3" json:"thrown_num,omitempty"`
	CreateTime string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Content    string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	Media      string `protobuf:"bytes,8,opt,name=media,proto3" json:"media,omitempty"`
	Categories string `protobuf:"bytes,9,opt,name=categories,proto3" json:"categories,omitempty"`
}

func (x *PostsInfo) Reset() {
	*x = PostsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsInfo) ProtoMessage() {}

func (x *PostsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsInfo.ProtoReflect.Descriptor instead.
func (*PostsInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{11}
}

func (x *PostsInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostsInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostsInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PostsInfo) GetAuthor() int64 {
	if x != nil {
		return x.Author
	}
	return 0
}

func (x *PostsInfo) GetThrownNum() int64 {
	if x != nil {
		return x.ThrownNum
	}
	return 0
}

func (x *PostsInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PostsInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostsInfo) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

func (x *PostsInfo) GetCategories() string {
	if x != nil {
		return x.Categories
	}
	return ""
}

// Posts page query
type PostsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo   *PageInfo `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	Title      string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Source     string    `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Author     int64     `protobuf:"varint,4,opt,name=author,proto3" json:"author,omitempty"`
	CreateTime string    `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Categories string    `protobuf:"bytes,6,opt,name=categories,proto3" json:"categories,omitempty"`
}

func (x *PostsReq) Reset() {
	*x = PostsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsReq) ProtoMessage() {}

func (x *PostsReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsReq.ProtoReflect.Descriptor instead.
func (*PostsReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{12}
}

func (x *PostsReq) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *PostsReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostsReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PostsReq) GetAuthor() int64 {
	if x != nil {
		return x.Author
	}
	return 0
}

func (x *PostsReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *PostsReq) GetCategories() string {
	if x != nil {
		return x.Categories
	}
	return ""
}

// The response data of Posts list
type PostsListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseListInfo *BaseListInfo `protobuf:"bytes,1,opt,name=base_list_info,json=baseListInfo,proto3" json:"base_list_info,omitempty"`
	Data         []*PostsInfo  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PostsListInfo) Reset() {
	*x = PostsListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsListInfo) ProtoMessage() {}

func (x *PostsListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsListInfo.ProtoReflect.Descriptor instead.
func (*PostsListInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{13}
}

func (x *PostsListInfo) GetBaseListInfo() *BaseListInfo {
	if x != nil {
		return x.BaseListInfo
	}
	return nil
}

func (x *PostsListInfo) GetData() []*PostsInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// DeliveryLog information
type DeliveryLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Source       string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	DomainName   string `protobuf:"bytes,4,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	DeliveryDate string `protobuf:"bytes,5,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	Deliverer    string `protobuf:"bytes,6,opt,name=deliverer,proto3" json:"deliverer,omitempty"`
	Status       int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Author       uint64 `protobuf:"varint,8,opt,name=author,proto3" json:"author,omitempty"`
	PostsId      uint64 `protobuf:"varint,9,opt,name=posts_id,json=postsId,proto3" json:"posts_id,omitempty"`
	StationId    uint64 `protobuf:"varint,10,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	WpCateIds    string `protobuf:"bytes,11,opt,name=wp_cate_ids,json=wpCateIds,proto3" json:"wp_cate_ids,omitempty"`
}

func (x *DeliveryLogInfo) Reset() {
	*x = DeliveryLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryLogInfo) ProtoMessage() {}

func (x *DeliveryLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryLogInfo.ProtoReflect.Descriptor instead.
func (*DeliveryLogInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{14}
}

func (x *DeliveryLogInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliveryLogInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DeliveryLogInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DeliveryLogInfo) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *DeliveryLogInfo) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *DeliveryLogInfo) GetDeliverer() string {
	if x != nil {
		return x.Deliverer
	}
	return ""
}

func (x *DeliveryLogInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeliveryLogInfo) GetAuthor() uint64 {
	if x != nil {
		return x.Author
	}
	return 0
}

func (x *DeliveryLogInfo) GetPostsId() uint64 {
	if x != nil {
		return x.PostsId
	}
	return 0
}

func (x *DeliveryLogInfo) GetStationId() uint64 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *DeliveryLogInfo) GetWpCateIds() string {
	if x != nil {
		return x.WpCateIds
	}
	return ""
}

type DeliveryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationInfoList []*StationInfo `protobuf:"bytes,1,rep,name=station_info_list,json=stationInfoList,proto3" json:"station_info_list,omitempty"`
	PostsInfoList   []*PostsInfo   `protobuf:"bytes,2,rep,name=posts_info_list,json=postsInfoList,proto3" json:"posts_info_list,omitempty"`
	Deliverer       string         `protobuf:"bytes,3,opt,name=deliverer,proto3" json:"deliverer,omitempty"`
}

func (x *DeliveryInfo) Reset() {
	*x = DeliveryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryInfo) ProtoMessage() {}

func (x *DeliveryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryInfo.ProtoReflect.Descriptor instead.
func (*DeliveryInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{15}
}

func (x *DeliveryInfo) GetStationInfoList() []*StationInfo {
	if x != nil {
		return x.StationInfoList
	}
	return nil
}

func (x *DeliveryInfo) GetPostsInfoList() []*PostsInfo {
	if x != nil {
		return x.PostsInfoList
	}
	return nil
}

func (x *DeliveryInfo) GetDeliverer() string {
	if x != nil {
		return x.Deliverer
	}
	return ""
}

// DeliveryLog page query
type DeliveryLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo     *PageInfo `protobuf:"bytes,1,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	Title        string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Source       string    `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	DomainName   string    `protobuf:"bytes,4,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	DeliveryDate string    `protobuf:"bytes,5,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	Deliverer    string    `protobuf:"bytes,6,opt,name=deliverer,proto3" json:"deliverer,omitempty"`
	Status       int64     `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Author       int64     `protobuf:"varint,8,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *DeliveryLogReq) Reset() {
	*x = DeliveryLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryLogReq) ProtoMessage() {}

func (x *DeliveryLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryLogReq.ProtoReflect.Descriptor instead.
func (*DeliveryLogReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{16}
}

func (x *DeliveryLogReq) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *DeliveryLogReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DeliveryLogReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DeliveryLogReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *DeliveryLogReq) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *DeliveryLogReq) GetDeliverer() string {
	if x != nil {
		return x.Deliverer
	}
	return ""
}

func (x *DeliveryLogReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeliveryLogReq) GetAuthor() int64 {
	if x != nil {
		return x.Author
	}
	return 0
}

// The response data of DeliveryLog list
type DeliveryLogListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseListInfo *BaseListInfo      `protobuf:"bytes,1,opt,name=base_list_info,json=baseListInfo,proto3" json:"base_list_info,omitempty"`
	Data         []*DeliveryLogInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DeliveryLogListInfo) Reset() {
	*x = DeliveryLogListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryLogListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryLogListInfo) ProtoMessage() {}

func (x *DeliveryLogListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryLogListInfo.ProtoReflect.Descriptor instead.
func (*DeliveryLogListInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{17}
}

func (x *DeliveryLogListInfo) GetBaseListInfo() *BaseListInfo {
	if x != nil {
		return x.BaseListInfo
	}
	return nil
}

func (x *DeliveryLogListInfo) GetData() []*DeliveryLogInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// StationPostsRelation information
type StationPostsRelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StationId uint64 `protobuf:"varint,2,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	PostsId   uint64 `protobuf:"varint,3,opt,name=posts_id,json=postsId,proto3" json:"posts_id,omitempty"`
	WpId      int64  `protobuf:"varint,4,opt,name=wp_id,json=wpId,proto3" json:"wp_id,omitempty"`
}

func (x *StationPostsRelationInfo) Reset() {
	*x = StationPostsRelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationPostsRelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationPostsRelationInfo) ProtoMessage() {}

func (x *StationPostsRelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationPostsRelationInfo.ProtoReflect.Descriptor instead.
func (*StationPostsRelationInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{18}
}

func (x *StationPostsRelationInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StationPostsRelationInfo) GetStationId() uint64 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *StationPostsRelationInfo) GetPostsId() uint64 {
	if x != nil {
		return x.PostsId
	}
	return 0
}

func (x *StationPostsRelationInfo) GetWpId() int64 {
	if x != nil {
		return x.WpId
	}
	return 0
}

type StationPostsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *StationPostsInfo) Reset() {
	*x = StationPostsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationPostsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationPostsInfo) ProtoMessage() {}

func (x *StationPostsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationPostsInfo.ProtoReflect.Descriptor instead.
func (*StationPostsInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{19}
}

func (x *StationPostsInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StationPostsInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// Station Posts  返回体
type StationPostsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*StationPostsInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *StationPostsResp) Reset() {
	*x = StationPostsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StationPostsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationPostsResp) ProtoMessage() {}

func (x *StationPostsResp) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationPostsResp.ProtoReflect.Descriptor instead.
func (*StationPostsResp) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{20}
}

func (x *StationPostsResp) GetData() []*StationPostsInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostsStationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainName string `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
}

func (x *PostsStationInfo) Reset() {
	*x = PostsStationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsStationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsStationInfo) ProtoMessage() {}

func (x *PostsStationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsStationInfo.ProtoReflect.Descriptor instead.
func (*PostsStationInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{21}
}

func (x *PostsStationInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostsStationInfo) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

// Posts Station 返回体
type PostsStationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PostsStationInfo `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PostsStationResp) Reset() {
	*x = PostsStationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostsStationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostsStationResp) ProtoMessage() {}

func (x *PostsStationResp) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostsStationResp.ProtoReflect.Descriptor instead.
func (*PostsStationResp) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{22}
}

func (x *PostsStationResp) GetData() []*PostsStationInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// Users
type UsersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // 可选
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`         // 姓名，页面显示
	Email    string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`       // 邮箱
	Slug     string `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`         // 用户标识符
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"` // 登录名称
	Password string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"` // 登录密码，实际应用中应避免直接传输明文密码
}

func (x *UsersInfo) Reset() {
	*x = UsersInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInfo) ProtoMessage() {}

func (x *UsersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInfo.ProtoReflect.Descriptor instead.
func (*UsersInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{23}
}

func (x *UsersInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UsersInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UsersInfo) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UsersInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsersInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Users 页面查询
type UsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                               // 姓名
	Email      string    `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`                             // 邮箱
	Slug       string    `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`                               // 用户标识符
	CreateTime string    `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
	PageInfo   *PageInfo `protobuf:"bytes,5,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`       // 分页信息，假设 PageInfo 已定义
}

func (x *UsersReq) Reset() {
	*x = UsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersReq) ProtoMessage() {}

func (x *UsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersReq.ProtoReflect.Descriptor instead.
func (*UsersReq) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{24}
}

func (x *UsersReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UsersReq) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UsersReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UsersReq) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

// The response data of Users list | Users 列表数据
type UsersListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseListInfo *BaseListInfo `protobuf:"bytes,1,opt,name=base_list_info,json=baseListInfo,proto3" json:"base_list_info,omitempty"`
	Data         []*UsersInfo  `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UsersListInfo) Reset() {
	*x = UsersListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_station_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersListInfo) ProtoMessage() {}

func (x *UsersListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_station_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersListInfo.ProtoReflect.Descriptor instead.
func (*UsersListInfo) Descriptor() ([]byte, []int) {
	return file_station_proto_rawDescGZIP(), []int{25}
}

func (x *UsersListInfo) GetBaseListInfo() *BaseListInfo {
	if x != nil {
		return x.BaseListInfo
	}
	return nil
}

func (x *UsersListInfo) GetData() []*UsersInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_station_proto protoreflect.FileDescriptor

var file_station_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x0c, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x4d, 0x0a, 0x0b, 0x49, 0x44, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x1b, 0x0a, 0x09, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x07,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa1, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xe3, 0x01, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x22, 0x78, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b,
	0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x0f, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xf1, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x6f, 0x77,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x72,
	0x6f, 0x77, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x74, 0x0a, 0x0d, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xbd, 0x02, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x73,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x77, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x70, 0x43, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x72, 0x22, 0x82,
	0x02, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x77, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x77, 0x70, 0x49,
	0x64, 0x22, 0x38, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x41, 0x0a, 0x10, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43,
	0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x99, 0x02, 0x0a,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0a, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xaf, 0x03, 0x0a, 0x07, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b,
	0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a,
	0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd8, 0x02, 0x0a, 0x05, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x38, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x12,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0a, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x32, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x12,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xf0, 0x03, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x42, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0f, 0x67, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x44, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x12, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3b, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c,
	0x6f, 0x67, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x44, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a,
	0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f,
	0x67, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xa4, 0x02, 0x0a, 0x14, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x5f, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x62, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49,
	0x44, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_station_proto_rawDescOnce sync.Once
	file_station_proto_rawDescData = file_station_proto_rawDesc
)

func file_station_proto_rawDescGZIP() []byte {
	file_station_proto_rawDescOnce.Do(func() {
		file_station_proto_rawDescData = protoimpl.X.CompressGZIP(file_station_proto_rawDescData)
	})
	return file_station_proto_rawDescData
}

var file_station_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_station_proto_goTypes = []interface{}{
	(*BaseDataInfo)(nil),             // 0: station.BaseDataInfo
	(*BaseListInfo)(nil),             // 1: station.BaseListInfo
	(*PageInfo)(nil),                 // 2: station.PageInfo
	(*IDStatusReq)(nil),              // 3: station.IDStatusReq
	(*IDPathReq)(nil),                // 4: station.IDPathReq
	(*UUIDReq)(nil),                  // 5: station.UUIDReq
	(*StationInfo)(nil),              // 6: station.StationInfo
	(*StationReq)(nil),               // 7: station.StationReq
	(*StationListInfo)(nil),          // 8: station.StationListInfo
	(*StationListResp)(nil),          // 9: station.StationListResp
	(*StationInfoResp)(nil),          // 10: station.StationInfoResp
	(*PostsInfo)(nil),                // 11: station.PostsInfo
	(*PostsReq)(nil),                 // 12: station.PostsReq
	(*PostsListInfo)(nil),            // 13: station.PostsListInfo
	(*DeliveryLogInfo)(nil),          // 14: station.DeliveryLogInfo
	(*DeliveryInfo)(nil),             // 15: station.DeliveryInfo
	(*DeliveryLogReq)(nil),           // 16: station.DeliveryLogReq
	(*DeliveryLogListInfo)(nil),      // 17: station.DeliveryLogListInfo
	(*StationPostsRelationInfo)(nil), // 18: station.StationPostsRelationInfo
	(*StationPostsInfo)(nil),         // 19: station.StationPostsInfo
	(*StationPostsResp)(nil),         // 20: station.StationPostsResp
	(*PostsStationInfo)(nil),         // 21: station.PostsStationInfo
	(*PostsStationResp)(nil),         // 22: station.PostsStationResp
	(*UsersInfo)(nil),                // 23: station.UsersInfo
	(*UsersReq)(nil),                 // 24: station.UsersReq
	(*UsersListInfo)(nil),            // 25: station.UsersListInfo
}
var file_station_proto_depIdxs = []int32{
	2,  // 0: station.StationReq.page_info:type_name -> station.PageInfo
	1,  // 1: station.StationListInfo.base_list_info:type_name -> station.BaseListInfo
	6,  // 2: station.StationListInfo.data:type_name -> station.StationInfo
	0,  // 3: station.StationListResp.base_data_info:type_name -> station.BaseDataInfo
	8,  // 4: station.StationListResp.data:type_name -> station.StationListInfo
	0,  // 5: station.StationInfoResp.base_data_info:type_name -> station.BaseDataInfo
	6,  // 6: station.StationInfoResp.data:type_name -> station.StationInfo
	2,  // 7: station.PostsReq.page_info:type_name -> station.PageInfo
	1,  // 8: station.PostsListInfo.base_list_info:type_name -> station.BaseListInfo
	11, // 9: station.PostsListInfo.data:type_name -> station.PostsInfo
	6,  // 10: station.DeliveryInfo.station_info_list:type_name -> station.StationInfo
	11, // 11: station.DeliveryInfo.posts_info_list:type_name -> station.PostsInfo
	2,  // 12: station.DeliveryLogReq.page_info:type_name -> station.PageInfo
	1,  // 13: station.DeliveryLogListInfo.base_list_info:type_name -> station.BaseListInfo
	14, // 14: station.DeliveryLogListInfo.data:type_name -> station.DeliveryLogInfo
	19, // 15: station.StationPostsResp.data:type_name -> station.StationPostsInfo
	21, // 16: station.PostsStationResp.data:type_name -> station.PostsStationInfo
	2,  // 17: station.UsersReq.page_info:type_name -> station.PageInfo
	1,  // 18: station.UsersListInfo.base_list_info:type_name -> station.BaseListInfo
	23, // 19: station.UsersListInfo.data:type_name -> station.UsersInfo
	23, // 20: station.Users.addUsers:input_type -> station.UsersInfo
	23, // 21: station.Users.updateUsers:input_type -> station.UsersInfo
	4,  // 22: station.Users.deleteUsers:input_type -> station.IDPathReq
	24, // 23: station.Users.queryUsers:input_type -> station.UsersReq
	4,  // 24: station.Users.getUsers:input_type -> station.IDPathReq
	6,  // 25: station.Station.addStation:input_type -> station.StationInfo
	6,  // 26: station.Station.updateStation:input_type -> station.StationInfo
	4,  // 27: station.Station.deleteStation:input_type -> station.IDPathReq
	7,  // 28: station.Station.queryStation:input_type -> station.StationReq
	4,  // 29: station.Station.getStationAll:input_type -> station.IDPathReq
	4,  // 30: station.Station.getStation:input_type -> station.IDPathReq
	4,  // 31: station.Station.queryPosts:input_type -> station.IDPathReq
	11, // 32: station.Posts.addPosts:input_type -> station.PostsInfo
	11, // 33: station.Posts.updatePosts:input_type -> station.PostsInfo
	4,  // 34: station.Posts.deletePosts:input_type -> station.IDPathReq
	12, // 35: station.Posts.queryPosts:input_type -> station.PostsReq
	4,  // 36: station.Posts.getPosts:input_type -> station.IDPathReq
	4,  // 37: station.Posts.queryStation:input_type -> station.IDPathReq
	17, // 38: station.DeliveryLog.addDelivery:input_type -> station.DeliveryLogListInfo
	15, // 39: station.DeliveryLog.getDeliveryList:input_type -> station.DeliveryInfo
	14, // 40: station.DeliveryLog.addDeliveryLog:input_type -> station.DeliveryLogInfo
	14, // 41: station.DeliveryLog.updateDeliveryLog:input_type -> station.DeliveryLogInfo
	3,  // 42: station.DeliveryLog.updateStatus:input_type -> station.IDStatusReq
	4,  // 43: station.DeliveryLog.deleteDeliveryLog:input_type -> station.IDPathReq
	16, // 44: station.DeliveryLog.queryDeliveryLog:input_type -> station.DeliveryLogReq
	18, // 45: station.StationPostsRelation.addStationPostsRelation:input_type -> station.StationPostsRelationInfo
	18, // 46: station.StationPostsRelation.updateStationPostsRelation:input_type -> station.StationPostsRelationInfo
	4,  // 47: station.StationPostsRelation.deleteStationPostsRelation:input_type -> station.IDPathReq
	23, // 48: station.Users.addUsers:output_type -> station.UsersInfo
	23, // 49: station.Users.updateUsers:output_type -> station.UsersInfo
	0,  // 50: station.Users.deleteUsers:output_type -> station.BaseDataInfo
	25, // 51: station.Users.queryUsers:output_type -> station.UsersListInfo
	23, // 52: station.Users.getUsers:output_type -> station.UsersInfo
	6,  // 53: station.Station.addStation:output_type -> station.StationInfo
	6,  // 54: station.Station.updateStation:output_type -> station.StationInfo
	0,  // 55: station.Station.deleteStation:output_type -> station.BaseDataInfo
	8,  // 56: station.Station.queryStation:output_type -> station.StationListInfo
	8,  // 57: station.Station.getStationAll:output_type -> station.StationListInfo
	6,  // 58: station.Station.getStation:output_type -> station.StationInfo
	20, // 59: station.Station.queryPosts:output_type -> station.StationPostsResp
	11, // 60: station.Posts.addPosts:output_type -> station.PostsInfo
	11, // 61: station.Posts.updatePosts:output_type -> station.PostsInfo
	0,  // 62: station.Posts.deletePosts:output_type -> station.BaseDataInfo
	13, // 63: station.Posts.queryPosts:output_type -> station.PostsListInfo
	11, // 64: station.Posts.getPosts:output_type -> station.PostsInfo
	22, // 65: station.Posts.queryStation:output_type -> station.PostsStationResp
	0,  // 66: station.DeliveryLog.addDelivery:output_type -> station.BaseDataInfo
	17, // 67: station.DeliveryLog.getDeliveryList:output_type -> station.DeliveryLogListInfo
	14, // 68: station.DeliveryLog.addDeliveryLog:output_type -> station.DeliveryLogInfo
	14, // 69: station.DeliveryLog.updateDeliveryLog:output_type -> station.DeliveryLogInfo
	0,  // 70: station.DeliveryLog.updateStatus:output_type -> station.BaseDataInfo
	0,  // 71: station.DeliveryLog.deleteDeliveryLog:output_type -> station.BaseDataInfo
	17, // 72: station.DeliveryLog.queryDeliveryLog:output_type -> station.DeliveryLogListInfo
	18, // 73: station.StationPostsRelation.addStationPostsRelation:output_type -> station.StationPostsRelationInfo
	18, // 74: station.StationPostsRelation.updateStationPostsRelation:output_type -> station.StationPostsRelationInfo
	0,  // 75: station.StationPostsRelation.deleteStationPostsRelation:output_type -> station.BaseDataInfo
	48, // [48:76] is the sub-list for method output_type
	20, // [20:48] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_station_proto_init() }
func file_station_proto_init() {
	if File_station_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_station_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDPathReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryLogListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationPostsRelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationPostsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StationPostsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsStationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostsStationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_station_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_station_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_station_proto_goTypes,
		DependencyIndexes: file_station_proto_depIdxs,
		MessageInfos:      file_station_proto_msgTypes,
	}.Build()
	File_station_proto = out.File
	file_station_proto_rawDesc = nil
	file_station_proto_goTypes = nil
	file_station_proto_depIdxs = nil
}
